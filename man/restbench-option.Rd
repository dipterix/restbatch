% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/option.R
\name{restbench-option}
\alias{restbench-option}
\alias{restbench_setopt}
\alias{restbench_resetopt}
\alias{restbench_getopt}
\alias{restbench_confpath}
\title{Set/Get 'restbench' option}
\usage{
restbench_setopt(key, value, .save = TRUE)

restbench_resetopt(all = FALSE)

restbench_getopt(key, default = NA, temp = TRUE)

restbench_confpath(cfile = "settings.yaml")
}
\arguments{
\item{key}{character, option name}

\item{value}{character or logical of length 1, option value}

\item{.save}{whether to save to local drive, internally used to temporary
change option. Not recommended to use it directly.}

\item{all}{whether to reset all non-default keys}

\item{default}{is key not found, return default value}

\item{temp}{when saving, whether the key-value pair should be considered
temporary, a temporary settings will be ignored when saving; when getting
options, setting \code{temp} to false will reveal the actual settings.}

\item{cfile}{file name in configuration path}
}
\value{
\code{restbench_setopt} returns modified \code{value};
\code{restbench_resetopt} returns current settings as a list;
\code{restbench_confpath} returns absolute path for the settings file;
\code{restbench_getopt} returns the settings value to the given key, or
\code{default} if not found.
}
\description{
Persist settings on local configuration file
}
\details{
\code{restbench_setopt} stores key-value pair in local path.
The values are persistent and shared across multiple sessions.
There are some read-only keys such as \code{"session_string"}. Trying to
set those keys will result in error.

\code{restbench_getopt} returns value corresponding to the keys. If key is
missing, the whole option will be returned.

If set \code{all=TRUE}, \code{restbench_resetopt} resets all keys including
non-standard ones. However \code{"session_string"} will never reset.
}
\seealso{
\code{R_user_dir}
}
